{"version":3,"sources":["components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Dialogs.js","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js"],"names":["Friend","props","className","c","dialog","active","to","src","avatar","name","maxLength20","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","state","dialogesPage","dialogsElements","dialogs","map","d","DialogItem","id","key","messagesElements","messages","m","Message","isAuth","dialogItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","withAuthRedirect","Component","RedirectComponent","this","React","connect","compose","dispatch","newPostBody","sendMessageCreator"],"mappings":"qJAeeA,EAXA,SAACC,GACZ,OACI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,kBAAC,IAAD,CAASC,GAAG,IACR,yBAAKJ,UAAU,SAASK,IAAKN,EAAMO,SACnC,8BAAOP,EAAMQ,S,kDC6BzBC,EAAcC,YAAiB,IAc7BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAbL,SAACZ,GACpB,OACI,0BAAMc,SAAUd,EAAMe,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUV,KAAK,iBAAiBW,YAAY,gBAAgBC,SAAU,CAACC,IAAUZ,MAEvG,6BACI,6CAQDa,IA3CC,SAACtB,GAEb,IAAIuB,EAAQvB,EAAMwB,aACdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAACC,EAAD,CAAYrB,KAAMoB,EAAEpB,KAAMsB,GAAIF,EAAEE,GAAIC,IAAKH,EAAEE,GAAIvB,OAAQqB,EAAErB,YAClGyB,EAAmBT,EAAMU,SAASN,KAAI,SAAAO,GAAC,OAAI,kBAACC,EAAA,EAAD,CAASZ,MAAOW,EAAGH,IAAKG,EAAEJ,QAMzE,OAAI9B,EAAMoC,OAIN,yBAAKnC,UAAWC,IAAEwB,SACd,yBAAKzB,UAAWC,IAAEmC,aACbZ,GAEL,yBAAKxB,UAAWC,IAAE+B,UACd,6BAAMD,GACN,kBAACrB,EAAD,CAAqBG,SAdb,SAACwB,GACjBtC,EAAMuC,YAAYD,EAAOE,qBAIlB,kBAAC,IAAD,CAAUnC,GAAI,a,gJCjBzBoC,EAA6B,SAAClB,GAAD,MAAY,CACzCa,OAAQb,EAAMmB,KAAKN,SAGVO,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAIC,KAAK9C,MAAMoC,OAGR,kBAACQ,EAAcE,KAAK9C,OAFhB,kBAAC,IAAD,CAAUK,GAAG,eAJW,GACX0C,IAAMH,WAWtC,OAFqCI,YAAQP,EAARO,CAAoCH,K,iCCnB7E,0DAyBeI,sBACXD,aAlBkB,SAACzB,GACpB,MAAO,CACHC,aAAcD,EAAMC,iBAGF,SAAC0B,GACtB,MAAO,CAIHX,YAAa,SAACY,GACVD,EAASE,YAAmBD,SAQpCR,IAFWM,CAGb3B","file":"static/js/5.5e2b45a9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport c from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Friend = (props) => {\r\n    return (\r\n        <div className={c.dialog + ' ' + c.active}>\r\n            <NavLink to=''>\r\n                <img className=\"avatar\" src={props.avatar}/>\r\n                <span>{props.name}</span>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friend;","import React from \"react\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport c from './Dialogs.module.css';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validator/validators\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogesPage;\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id} avatar={d.avatar}/>);\r\n    let messagesElements = state.messages.map(m => <Message state={m} key={m.id}/>);\r\n\r\n    let addNewMessage = (values) =>{\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if(!props.isAuth)\r\n        return <Redirect to={\"/login\"} />\r\n\r\n    return (\r\n        <div className={c.dialogs}>\r\n            <div className={c.dialogItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={c.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nlet maxLength20 = maxLengthCreator(20);\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"newMessageBody\" placeholder=\"enter message\" validate={[required, maxLength20]}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Dialogs from \"../components/Dialogs/Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth)\r\n                return <Redirect to=\"/login\" />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from \"react\";\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n       dialogesPage: state.dialogesPage\r\n   }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // updateNewMessage: (body) => {\r\n        //     dispatch(updateNewMessageBodyCreator(body))\r\n        // },\r\n        sendMessage: (newPostBody) => {\r\n            dispatch(sendMessageCreator(newPostBody))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}